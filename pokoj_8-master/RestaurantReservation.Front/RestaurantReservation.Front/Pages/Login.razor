<!-- Pages/Login.razor -->
@page "/login"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using RestaurantReservation.Front.Models
@using RestaurantReservation.Front.Utils
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
    <div class="form-group">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="loginModel.Email" />
    </div>
    <div class="form-group">
        <label>Password:</label>
        <InputText type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

<a href="/register">Register here</a>

@code {
    private Models.Login loginModel = new Models.Login();

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync($"{Endpoints.Users}/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var user = await response.Content.ReadFromJsonAsync<User>();
            if (user != null)
            {
                var userJson = JsonSerializer.Serialize(user);
                await JsRuntime.InvokeVoidAsync("setCookie", "loggedInUser", userJson, 1);
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Logowanie nie powiodło się");
        }
    }
}